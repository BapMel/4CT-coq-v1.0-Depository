<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>A guide to the Four Color Theorem Coq proof script files</title>

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h1
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:Arial;}
h2
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:center;
	font-size:16.0pt;
	font-family:Arial;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 57.6pt 72.0pt 57.6pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-GB link=blue vlink=purple>

<div class=Section1>

<p class=MsoTitle>A guide to the Four Color Theorem Coq proof script files</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText style='margin-left:18.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The Four Color Theorem Coq proof script is split
in 132 files, about half of which are automatically generated from the data for
the Robertson <i>et al</i>. proof. We give here a short synopsis of the manually
written script files, indicating briefly how each fits in the overall proof.
For the purposes of this exposition we have divided into eight groups. Note
that while there are no circular dependencies between files (this is not
allowed by the Coq separate compilation mechanism), there are a few
cross-dependencies between groups. For example, the groups for configuration
maps and minimal counter examples depend on each other: the proof of the
Birkhoff lemma (</span><a href="./birkhoff.v">birkhoff.v</a>) <span
style='font-size:12.0pt;font-family:"Times New Roman"'>uses the configuration
map construction (</span><a href="./cfmap.v">cfmap.v</a><span
style='font-size:12.0pt;font-family:"Times New Roman"'>), and the configuration
quiz compilation (</span><a href="./cfquiz.v">cfquiz.v</a><span
style='font-size:12.0pt;font-family:"Times New Roman"'>)  produces a valid
quiz, as defined in </span><a href="./quiz.v">quiz.v</a><span
style='font-size:12.0pt;font-family:"Times New Roman"'>.</span></p>

<p class=MsoPlainText style='margin-left:36.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoPlainText style='margin-left:18.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The best way to view these scripts is probably
to step though them under the ProofGeneral emacs-based IDE, as this will allow
viewing the intermediate goals generated by the Coq tactic interpreter, over
which the tacticals operate.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Presentation</h1>

<p class=MsoNormal style='margin-left:14.2pt'> These three files give a
self-contained, top-level account of the final result:</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./real.v">real.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>Defines arbitrary models (operations and axioms)
of the real number, and morphisms between such structures.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./realmap.v">realmap.v</a> </p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:11.0pt;font-family:"Times New Roman"'>Self-contained
topological definition of planar maps and their coloring, based on a </span><span
style='font-family:Courier'>real_model</span><span style='font-size:11.0pt;
font-family:"Times New Roman"'> as defined in </span><a
href="./real.v">real.v</a><span style='font-size:11.0pt;
font-family:"Times New Roman"'>.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./fourcolor.v">fourcolor.v</a></p>

<p class=MsoNormal style='margin-left:54.0pt'>The Four Color Theorem, in both
finite and infinite forms, again for an arbitrary <span style='font-size:10.0pt;
font-family:Courier'>real_model</span><span style='font-size:11.0pt'>; of
course this result depends, through the files <a
href="./combinatorial4ct.v">combinatorial4ct.v</a>, <a
href="./discretize.v">discretize.v</a>, and <a
href="./finitize.v">finitize.v</a>, on all the rest of the
development.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Base library</h1>

<p class=MsoNormal style='margin-left:18.0pt'>These files contain the basic
support for the generate-and-test proof style used in the main part of the
proof, essentially, the definition of the tactic shell, and extended revisions
of the basic boolean, integer, datatype, and list libraries. These libraries
largely overlap the definitions and lemmas in the standard Coq libraries, but
are better tuned to the proof style we adopted: definitions that “simplify” in
a more useful and predictable, a coherent and systematic set of rewrite lemmas,
with concise and systematic names, and no lemmas that duplicate the
functionality of the shell.</p>

<p class=MsoNormal style='margin-left:18.0pt'>These files contain no material
specific to the proof of the four color theorem.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./tacticext.v">tacticext.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Most of the tactic shell (part of the view
feature is in </span><span style='font-family:Courier'><a
href="./boolprop.v">boolprop.v</a></span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>), a simple pretty-printing framework,
and two mechanisms for controlling rewriting and simplification. About half of
this file consists of comments documenting extensively the tactic shell and
other features. The other half is the implementation of the shell using the Coq
v7.3.1 low-level syntax extension mechanism; it is quite unreadable, and should
be skipped.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./funs.v">funs.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>Function composition, injectivity, left
inverses, and extensional equality.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./boolprop.v">boolprop.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Logical reflection of boolean predicates, the
“view” feature of the tactic shell, reflection and rewrite lemmas for the
connectives, including boolean addition (an alternative definition of exclusive
or with a better simplification behavior).</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./dataset.v">dataset.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The </span><span style='font-family:Courier'>dataSet</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> structure formalizes ML
equality datatypes as types with a boolean relation that reflects the Leibnitz
equality. This is equivalent to having a decidable equality, but the explicitly
defined equality gives better control over simplification. Since we either needed
to assume or could prove that equality is decidable for all the data types that
occur in the four color theorem proof, we elected to work with </span><span
style='font-family:Courier'>dataSet</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>s throughout. This file also defines a </span><span
style='font-family:Courier'>set</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'> on a </span><span style='font-family:Courier'>dataSet</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> as boolean predicates,
with the usual connectives, and the standard data type constructions (subset,
product, and sum). </span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./natprop.v">natprop.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>This is mostly a refactoring of the standard </span><span
style='font-family:Courier'>Arith</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> library. We define variants </span><span
style='font-family:Courier'>addn</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>, </span><span style='font-family:Courier'>subn</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, </span><span
style='font-family:Courier'>leq</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'>, and </span><span style='font-family:Courier'>ltn</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> of the standard basic
operations on </span><span style='font-family:Courier'>nat</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, which behave better
with respect to simplification: Unlike its counterpart </span><span
style='font-family:Courier'>le </span><span style='font-size:12.0pt;font-family:
"Times New Roman"'>in the Coq standard library, </span><span style='font-family:
Courier'>leq</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
is a boolean predicate; this allows us to automatically prune branches where it
evaluates to </span><span style='font-family:Courier'>false</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, and to formulate most
of the properties of </span><span style='font-family:Courier'>leq</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> as (bidirectional)
boolean equations. Combined with the fact that </span><span style='font-family:
Courier'>(ltn m n)</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
is just <i>notation</i> for </span><span style='font-family:Courier'>(leq (S m)
n)</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>, this
divides by four the number of inequality lemmas. We define properties of
halving and doubling, but not of multiplication and division in general, as
they are seldom needed in the four color theorem proof.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./seq.v">seq.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>This is an extensive refactoring and extension
of the standard </span><span style='font-family:Courier'>PolyList</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> library. It defines </span><span
style='font-family:Courier'>seq</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'>, a variant of </span><span style='font-family:Courier'>list</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> specialized to </span><span
style='font-family:Courier'>dataSet</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> structures. This specialization makes it
possible to define a large set of list operations – essentially, most of a
standard LISP library – that are documented in the file header. Most of the
library’s lemmas are equations for simplifying two successive operations, and
some effort has been made to capture all juxtaposition cases. The coercion of </span><span
style='font-family:Courier'>seq</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'> to </span><span style='font-family:Courier'>set</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> via the membership test
is heavily used in the four color development.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./finset.v">finset.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The </span><span style='font-family:Courier'>finSet</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> structure formalizes
finite data sets as </span><span style='font-family:Courier'>dataSet</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> with an enumeration,
that is, a sequence in which every element occurs exactly once. This library
defines the subset cardinality operator, </span><span style='font-family:Courier'>subset</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, disjoint and related
predicates, their properties, and a choice function. It also gives
constructions for the finite sum, product, and finite ordinals.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./znat.v">znat.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>A
minimal signed integer arithmetic library, with support for finite summations;
the set of equations is far from complete, but is adequate for reasoning with
the discharge formulas in </span><a href="./discharge.v">discharge.v</a><span
style='font-size:12.0pt;font-family:"Times New Roman"'> and </span><a
href="./hubcap.v">hubcap.v</a>, <span style='font-size:11.0pt;
font-family:"Times New Roman"'>and for the construction of the real numbers
below.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Real numbers</h1>

<p class=MsoNormal style='margin-left:18.0pt'>The following files define an
embryonic real number library, just sufficient for the admittedly limited use
of real numbers in the proof of the Four Color Theorem.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'><a
href="./frac.v">frac.v</a></span></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>A limited development on rational numbers,
providing only basic operations and a density lemma.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./dedekind.v">dedekind.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>A Dedekind-cut contruction of a real_model,
assuming classical reasoning (i.e., the excluded middle axiom). This proves
that our axioms for the real are consistent with the Coq type theory.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./realsyntax.v">realsyntax.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>Infix operator syntax for the real number
operations.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./realprop.v">realprop.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>Basic lemmas for the real numbers, in particular
establishing a quotient (Setoid) structure based on the extensional real
equality. (Unfortunately, it is rather awkward to do equational reasoning with
this structure in Coq v7.) We also show that the real axioms imply the excluded
middle, so any development based on the real numbers can use classical
reasoninig freely. </span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./realcategorical.v">realcategorical.v</a></p>

<p class=MsoPlainText style='margin-left:36.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>      Proof that the real models and their
morphisms form a graph category, and thus that the model constructed in file </span><a
href="./dedekind.v">dedekind.v</a> <span style='font-size:11.0pt;
font-family:"Times New Roman"'>is unique.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Project library</h1>

<p class=MsoNormal style='margin-left:18.0pt'>The following files define all
the notions needed to state the four color theorem and its proof outline:
hypermaps, their geometrical properties, colorings, and chromograms. </p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./paths.v">paths.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>We define paths as sequences on which the </span><span
style='font-family:Courier'>path</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> predicate returns </span><span
style='font-family:Courier'>true</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>. This file defines paths, duplicate-free paths,
cycles, arcs, trajectories, as well as functions that compute the next and
previous elements, dependent predicates for splitting a path, and the </span><span
style='font-family:Courier'>mem2</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> predicate used in the definition of the Jordan
property (where (</span><span style='font-family:Courier'>mem2</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> <i>p x y</i>) means “<i>y</i>
occurs at or after <i>x</i> in <i>p</i>”).</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./connect.v">connect.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Additional properties of paths on <i>finite</i>
domains: connectivity (decidable by depth first search), connected component
roots, relational closure of a subset; additional properties of functions: order,
orbits, and inverses. We also define a form of adjunction that will be used to
prove the preservation of the Euler formula.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./hypermap.v">hypermap.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Hypermaps, their duals, the Euler formula, and
the Jordan property.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./geometry.v">geometry.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Special hypermaps: plain maps (binary edges),
cubic maps (ternary node), bridgeless and loopless maps, “face-centric”
notions, such as simple paths and cycles, and special forms of the Euler
formula. We also define a number of records that regroup various subsets of these
properties.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./color.v">color.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The type </span><span style='font-family:Courier'>color</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> is just a four value
enumeration. We also define color addition, the </span><span style='font-family:
Courier'>trace</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
function that maps the face coloring of a ring to the corresponding edge
coloring, and the computation of the normal permutation of such a trace.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./chromogram.v">chromogram.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Chromograms and the “match” relation that
connects them to edge colorings.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./coloring.v">coloring.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Map coloring, decidability of map coloring,
minimal counter examples, C-reducible maps, and “good” configurations
satisfying the radius and ring arity constraints.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Planar maps</h1>

<p class=MsoNormal style='margin-left:18.0pt'>This group of scripts develops
the basic properties of planar maps. This serves both as justification that the
formal statement of the hypermap Four Color Theorem matches intuition, and as a
foundation for the main part of the proof. Most of the notions defined here are
valid for arbitrary non-plain hypermaps; only <span style='font-size:10.0pt;
font-family:Courier'><a href="./rjordan.v">rjordan.v</a></span>, <span
style='font-size:10.0pt;font-family:Courier'><a href="./kempe.v">kempe.v</a>
</span>and <span style='font-size:10.0pt;font-family:Courier'><a
href="./revsnip.v">revsnip.v</a></span> assume special maps.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./walkup.v">walkup.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The walkup transformation removes exactly one
dart from a hypermap, so it is the main tool for doing induction on hypermaps.
We study it effect on the Euler formula and the Jordan property here.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./jordan.v">jordan.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Equivalence between the Euler formula and the Jordan property.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./rjordan.v">rjordan.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Equivalence between the “simple ring” and
contour version of the Jordan property. This result is not used in the proof of
the Four Color Theorem, but it provides additional backing for the definition
of planarity used in the statement of the hypermap theorem.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./patch.v">patch.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The </span><span style='font-family:Courier'>patch</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> relation is an abstract
specification of the intuitive “cutout” operation that separates a map in two
pieces along a contour. Most geometrical properties of interest, such as
planarity, commute with </span><span style='font-family:Courier'>patch</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, e.g., the full map is
planar iff the tow pieces are. The </span><span style='font-family:Courier'>patch</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> relation is
asymmetrical: the “cutout disk” and “remainder” pieces do not quite have the
same properties.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./snip.v">snip.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The actual definition of the cutout operation;
we define it only for a simple cycle, rather that a general contour, because
that is what the proof of the Birkhoff lemma requires.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./sew.v">sew.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The inverse of </span><span style='font-family:
Courier'>snip</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>:
given two pieces, create a new map by sewing the pieces along their respective
“borders”, which must have the same length.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./kempe.v">kempe.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The main lemma of the reducibility proof: the
set of edge colorings of the “remainder” is closed under permutation and Kempe
inversions.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./revsnip.v">revsnip.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>In a plain map, cutting along a simple ring and
its reverse yields complementary cutout disks; and a simple ring can be split
along a chord.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>The minimal counter example map</h1>

<p class=MsoNormal style='margin-left:18.0pt'>This is the bulk of the
“mathematical” part of the proof of the four color theorem: we show that a
valid appearance check (a <span style='font-size:10.0pt;font-family:Courier'>quiz</span>)
for a “good”, C-reducible configuration always returns <span style='font-size:
10.0pt;font-family:Courier'>false</span> on a minimal counter example. The rest
of the proof is mainly combinatorial.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./cube.v">cube.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The reduction from general hypermaps to cubic
plain maps; only the final induction in </span><span style='font-family:Courier'><a
href="./fourcolor.v">fourcolor.v</a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> depends on this result.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./birkhoff.v">birkhoff.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The Birkhoff lemma: the minimal counter example
internally 5-connected, i.e., it has no “non-trivial” cycle of length 5 or
less. The proof uses reflection and some of the intermediate results of the
next two sections. This file contains the proof of some of the geometrical
implications of the Birkhoff lemma: faces are at least pentagons, the first
neighborhood of any face is a simple, chordless <i>spoke ring</i>, and only the
central face is adjacent to more that two faces in that ring.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./contract.v">contract.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>A minimal counter example has a contract
coloring for any valid contract (a contract is a set of edges to be erased, and
a contract coloring is a coloring where the faces incident to an edge have the
same color iff the edge is in the contract).</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./quiz.v">quiz.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>A </span><span style='font-family:Courier'>quiz</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> represents an
inside-out map traversal as a pair of (partial) binary trees. We show that if
we can run successfully a </span><span style='font-family:Courier'>quiz</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> on a configuration and
on a cubic map, and the traversal covers exactly the kernel (non-ring) faces in
the configuration, then there is a “preembedding” partial morphism mapping the
kernel of the configuration map to the cubic map.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./embed.v">embed.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Any preembedding from a “good” configuration to
a minimal counter example extends to an embedding (roughly, an isomorphism). If
the configuration is C-reducible the embedding carries the validity of the
contract into the counter example map; combining the results of </span><span
style='font-family:Courier'><a href="./contract.v">contract.v</a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, </span><span
style='font-family:Courier'><a href="./kempe.v">kempe.v</a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, and </span><span
style='font-family:Courier'><a href="./patch.v">patch.v</a></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> with the definition of
C-reducible gives a coloring of the “counter example”, that is, a
contradiction.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Configurations</h1>

<p class=MsoNormal style='margin-left:18.0pt'>This group of files introduces the
concrete representation of configuration maps, a formal “construction program”
whose standard interpretation is to construct a mathematical hypermap object,
but that can also be compiled to edge or contract colorings or <span
style='font-size:10.0pt;font-family:Courier'>quiz</span>zes, or analysed to
prove geometrical properties. The hypermap objects so constructed all have
dependent types, and the Coq compute engine has some difficulty with this kind
of data; many of the files below have unusually high compilation times.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./cfmap.v">cfmap.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The definition of map construction programs,
their standard interpretation, and the geometrical properties that hold by
construction for configuration programs (e.g., plain, cubic, planar) because
they use only a limited instruction set. As the construction proceeds
inside-out, we can also define a dependently-typed injection from any partial
stage of the construction into the final result; this injection is used in the
induction hypotheses of most of the main correctness proofs.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./cfcolor.v">cfcolor.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The coloring procedure, which generates directly
a decision diagram containing all the edge colorings of the map.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./cfcontract.v">cfcontract.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>A compilation function that maps a configuration
program and a contract to a construction program for a special contract map, whose
colorings coincide with the contract colorings of the configuration map. The contract
program can use the full set of instructions.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./cfreducible.v">cfreducible.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>This file defines the check that is performed in
the computational part of the reducibility proof, shows that it implies
mathematical C-reducibility, and defines tactics that run this check on
segments of the configuration list.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./cfquiz.v">cfquiz.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The </span><span style='font-family:Courier'>quiz</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> compilation procedure,
which also check that the program generates a “good” configuration.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>8.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Reducibility check</h1>

<p class=MsoNormal style='margin-left:18.0pt'>These files contain the
implementation of the decision diagram based reducibility check. All the graph
theory for this part has been developed in the previous files, so proofs here
are purely combinatorial. (Historically, this was the first part of the proof
to be developed.)</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./ctree.v">ctree.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The edge coloring <i>multiset</i> decision
diagrams.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./gtree.v">gtree.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The chromogram set decision diagrams.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./dyck.v">dyck.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The integer recurrence for the cardinality of
Dyck (bracket) languages.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./initctree.v">initctree.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Construction of the (compressed) initial
coloring decision diagram, using dynamic programming.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./initgtree.v">initgtree.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Construction of the (compressed) initial
chromogram decision diagram, using dynamic programming</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./ctreerestrict.v">ctreerestrict.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Remove from a </span><span style='font-family:
Courier'>ctree</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
the multiset of colorings matching some chromogram in a </span><span
style='font-family:Courier'>gtree</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> (multiple matches are removed multiple times).
This returns two diagrams: one is the new multiset, and the other is the set of
colorings that were deleted from the support of the multiset.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./gtreerestrict.v">gtreerestrict.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Remove from a </span><span style='font-family:
Courier'>gtree</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
all chromograms matching some coloring in a ctree. This also returns two
diagrams: one is the new set of chromograms, and the other is the set of
chromograms that were deleted.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./kempetree.v">kempetree.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Iterate the two restrict operations to compute
the “kempe coclosure” of the set of edge colorings of a configuration;
C-reducibility can then be computed by intersecting the resulting fixpoint with
the set of contract colorings.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>9.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Unavoidability check</h1>

<p class=MsoNormal style='margin-left:18.0pt'>These files define a purely
functional, somewhat streamlined version of the neighborhood enumeration
strategy proposed by Robertson <i>et al</i>.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./part.v">part.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>A </span><span style='font-family:Courier'>part</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> is a sequence of
records for storing a collection of arity intervals for faces in the second
neighborhood of a given dart. This file defines the concrete representation of
parts, a special concrete syntax for them, basic operation on intervals and
parts (such as comparison and intersection).</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./discharge.v">discharge.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>We directly use </span><span style='font-family:
Courier'>part</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>s
to specify the discharge rules; this allows us to prove directly that some face
has a discharged arity less than six.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./quiztree.v">quiztree.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>A three-layer decision diagram for storing the
(large) collection of quizzes for the 633 configurations in a way that allows
efficient retrieval.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./redpart.v">redpart.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The occurrence check for a reducible
configuration in a </span><span style='font-family:Courier'>part</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, using the </span><span
style='font-family:Courier'>quiztree</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> structure, and a special zipper representation
of parts that supports constant-time traversal of the quizzes.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./hubcap.v">hubcap.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>A </span><span style='font-family:Courier'>hubcap</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> is a list specifying
bounds on the fractions of arity that may be “transferred” across one or two of
the edges of the central face of a part. The bounds are chosen so their sum
with the central face arity is at least 6. One checks a </span><span
style='font-family:Courier'>hubcap</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> bound by checking that any map that the part
“fits” must either obey the bound or contain a reducible submap. This is done
by performing a clever branch and bound enumeration of the maps, independently
for each individual bound.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./dbhub.v">dbhub.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>“Debug” versions of the enumeration procedures
in <a href="./hubcap.v">hubcap.v</a>, that report the sets of
parts on which a bound fails.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./present.v">present.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The tactics and lemmas needed to implement the
Robertson <i>et al.</i> branch and bound enumeration strategy for the
unavoidability part of the proof. This is the first file that depends on the
list of configurations.</span></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>10.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The computational proof </h1>

<p class=MsoNormal style='margin-left:18.0pt'>Most of the four color proof
script is actually automatically generated from the data supplied by Robertson <i>et
al.</i> These auto generated files take up most of the verification time.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./configurations.v">configurations.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The list of configuration programs.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./reducibility.v">reducibility.v</a></p>

<p class=MsoPlainText style='margin-left:36.0pt;text-indent:18.0pt'><a
href="./task001to214.v">task001to214.v</a>, ... to <a
href="./task589to633.v">task589to633.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><a
href="./job001to106.v">job001to106.v</a>, ... to <a
href="./job623to633.v">job623to633.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The reducibility check computation, divided into
10 tasks each of which consists of 5 jobs. This is where most of the
verification time is spent, even though the corresponding script source and
proof object files are very small.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./unavoidability.v">unavoidability.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><a
href="./present5.v">present5.v</a>, ... to <a
href="./present11.v">present11.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The unavoidability check, divided according to
the arity of the central face. The scripts </span><a
href="./present7.v">present7.v</a> <span style='font-size:12.0pt;
font-family:"Times New Roman"'>to </span><a href="./present11.v">present11.v</a>
<span style='font-size:12.0pt;font-family:"Times New Roman"'>are computer
generated translations of the Robertson <i>et al</i>. enumeration scripts,
while </span><a href="./present5.v">present5.v</a> <span
style='font-size:12.0pt;font-family:"Times New Roman"'>and </span><a
href="./present6.v">present6.v</a> <span style='font-size:12.0pt;
font-family:"Times New Roman"'>were hand-written to replace partial manual
proofs.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./fourcolor.v">combinatorial4ct.v</a></p>

<p class=MsoNormal style='margin-left:54.0pt'>The four color theorem for
hypermaps; this is the strongest intermediate result that can be proved
constructively. This file depends of course on almost all the rest of the
development; indeed, it is the only file that depends on the outcome of the
reducibility and unavoidability computations.</p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt'>11.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Real geometry</h1>

<p class=MsoNormal style='margin-left:18.0pt'>These files describes the
reduction of the continuous coloring problem (on real maps) to a finite,
discrete one (on hypermaps). The reduction proceeds by approximating the
continuous problem on integer grids.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./grid.v">grid.v</a> </p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Basic constructions on integer grids: grid
rectangles, and the (infinite) hypermap structure on integer grids.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./matte.v">matte.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The construction of simple polygons made up of
grid squares, which will be used to approximate arbitrary continuous map
regions. </span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./gridmap.v">gridmap.v</a></p>

<p class=MsoPlainText style='margin-left:2.0cm;text-indent:-20.7pt'>   <span
style='font-size:11.0pt;font-family:"Times New Roman"'>The construction of a
hypermap encoding the coloring problem, given a matte approximation of a real
map. The construction proceeds by constructing the regular hypermap for the
full grid contained in a rectangle that covers the approximation, then cutting
out the “mattes” approximating the map regions, using the results from</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> </span><a
href="./snip.v">snip.v</a>.</p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./approx.v">approx.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>Approximation of real points, rectangles and
regions by their integer grid couterparts, scaled by a power of 2.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./finitize.v">finitize.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:11.0pt;
font-family:"Times New Roman"'>The proof, based on the compactness of
proposiitonal logic, that the general case of the Four Color Theorem follows
from the finite map case.</span></p>

<p class=MsoPlainText style='margin-left:54.0pt;text-indent:-18.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><a href="./discretize.v">discretize.v</a></p>

<p class=MsoPlainText style='margin-left:54.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>The discretization of a finite map coloring
problem into a hypermap coloring problem. This is the only file in the
development that uses topological reasoning.</span></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
